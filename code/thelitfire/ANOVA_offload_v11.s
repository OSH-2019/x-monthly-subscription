	.text
	.section	xdp,"ax",@progbits
	.globl	process_packet          # -- Begin function process_packet
	.p2align	3
process_packet:                         # @process_packet
#   This is ANOVA version 1.1, no difference between 1.0, but compiling steps.
#   compiling step: ANOVA_offload_v11.c
#       clang -target bpf -S -o ANOVA_offload_v11.s ANOVA_offload_v11.c
#       llvm-mc -triple bpf -filetype=obj -o A.o A.s
#   verifier error:
#       multiplier is not within __u32 range

# %bb.0:
	r2 = r1
	*(u64 *)(r10 - 16) = r1
	r1 = *(u64 *)(r10 - 16)
	r1 = *(u32 *)(r1 + 4)
	*(u64 *)(r10 - 24) = r1
	r1 = *(u64 *)(r10 - 16)
	r1 = *(u32 *)(r1 + 0)
	*(u64 *)(r10 - 32) = r1
	r1 = 42
	*(u32 *)(r10 - 36) = r1
	r1 = *(u64 *)(r10 - 32)
	r3 = *(u32 *)(r10 - 36)
	r1 += r3
	*(u64 *)(r10 - 48) = r1
	r1 = *(u64 *)(r10 - 48)
	r1 += 80
	r3 = *(u64 *)(r10 - 24)
	*(u64 *)(r10 - 80) = r2
	if r3 >= r1 goto LBB0_2
	goto LBB0_1
LBB0_1:
	r1 = 2
	*(u32 *)(r10 - 4) = r1
	goto LBB0_35
LBB0_2:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u64 *)(r1 + 0)
	r2 = 2408424645786761761 ll
	if r1 == r2 goto LBB0_4
	goto LBB0_3
LBB0_3:
	r1 = 2
	*(u32 *)(r10 - 4) = r1
	goto LBB0_35
LBB0_4:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u64 *)(r1 + 8)
	if r1 == 0 goto LBB0_6
	goto LBB0_5
LBB0_5:
	r1 = 2
	*(u32 *)(r10 - 4) = r1
	goto LBB0_35
LBB0_6:
	r1 = 0
	*(u32 *)(r10 - 52) = r1
	*(u64 *)(r10 - 64) = r1
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 16)
	r3 = *(u32 *)(r10 - 52)
	r3 += r2
	*(u32 *)(r10 - 52) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 16)
	r2 *= r2
	r3 = *(u64 *)(r10 - 64)
	r3 += r2
	*(u64 *)(r10 - 64) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 20)
	r3 = *(u32 *)(r10 - 52)
	r3 += r2
	*(u32 *)(r10 - 52) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 20)
	r2 *= r2
	r3 = *(u64 *)(r10 - 64)
	r3 += r2
	*(u64 *)(r10 - 64) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 24)
	r3 = *(u32 *)(r10 - 52)
	r3 += r2
	*(u32 *)(r10 - 52) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 24)
	r2 *= r2
	r3 = *(u64 *)(r10 - 64)
	r3 += r2
	*(u64 *)(r10 - 64) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 28)
	r3 = *(u32 *)(r10 - 52)
	r3 += r2
	*(u32 *)(r10 - 52) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 28)
	r2 *= r2
	r3 = *(u64 *)(r10 - 64)
	r3 += r2
	*(u64 *)(r10 - 64) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 32)
	r3 = *(u32 *)(r10 - 52)
	r3 += r2
	*(u32 *)(r10 - 52) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 32)
	r2 *= r2
	r3 = *(u64 *)(r10 - 64)
	r3 += r2
	*(u64 *)(r10 - 64) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 36)
	r3 = *(u32 *)(r10 - 52)
	r3 += r2
	*(u32 *)(r10 - 52) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 36)
	r2 *= r2
	r3 = *(u64 *)(r10 - 64)
	r3 += r2
	*(u64 *)(r10 - 64) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 40)
	r3 = *(u32 *)(r10 - 52)
	r3 += r2
	*(u32 *)(r10 - 52) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 40)
	r2 *= r2
	r3 = *(u64 *)(r10 - 64)
	r3 += r2
	*(u64 *)(r10 - 64) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 44)
	r3 = *(u32 *)(r10 - 52)
	r3 += r2
	*(u32 *)(r10 - 52) = r3
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 44)
	r2 *= r2
	r3 = *(u64 *)(r10 - 64)
	r3 += r2
	*(u64 *)(r10 - 64) = r3
	r2 = *(u32 *)(r10 - 52)
	r2 >>= 3
	*(u32 *)(r10 - 52) = r2
	r2 = *(u64 *)(r10 - 64)
	r2 >>= 3
	*(u64 *)(r10 - 64) = r2
	r2 = *(u32 *)(r10 - 52)
	r2 *= r2
	r2 <<= 32
	r2 >>= 32
	r3 = *(u64 *)(r10 - 64)
	r3 -= r2
	*(u64 *)(r10 - 64) = r3
	r2 = 102
	*(u32 *)(r10 - 68) = r2
	r2 = 10404
	*(u16 *)(r10 - 70) = r2
	*(u16 *)(r10 - 72) = r1
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 48)
	r2 = *(u32 *)(r10 - 52)
	if r2 > r1 goto LBB0_8
	goto LBB0_7
LBB0_7:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 48)
	r2 = *(u32 *)(r10 - 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 88) = r3
	*(u64 *)(r10 - 96) = r2
	if r1 > 101 goto LBB0_37
# %bb.36:
	r1 = *(u64 *)(r10 - 96)
	*(u64 *)(r10 - 88) = r1
LBB0_37:
	r1 = *(u64 *)(r10 - 88)
	*(u64 *)(r10 - 104) = r1
	goto LBB0_9
LBB0_8:
	r1 = *(u32 *)(r10 - 52)
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 48)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 112) = r3
	*(u64 *)(r10 - 120) = r2
	if r1 > 101 goto LBB0_39
# %bb.38:
	r1 = *(u64 *)(r10 - 120)
	*(u64 *)(r10 - 112) = r1
LBB0_39:
	r1 = *(u64 *)(r10 - 112)
	*(u64 *)(r10 - 104) = r1
	goto LBB0_9
LBB0_9:
	r1 = *(u64 *)(r10 - 104)
	r2 = *(u16 *)(r10 - 72)
	r2 += r1
	*(u16 *)(r10 - 72) = r2
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 52)
	r2 = *(u32 *)(r10 - 52)
	if r2 > r1 goto LBB0_11
	goto LBB0_10
LBB0_10:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 52)
	r2 = *(u32 *)(r10 - 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 128) = r3
	*(u64 *)(r10 - 136) = r2
	if r1 > 101 goto LBB0_41
# %bb.40:
	r1 = *(u64 *)(r10 - 136)
	*(u64 *)(r10 - 128) = r1
LBB0_41:
	r1 = *(u64 *)(r10 - 128)
	*(u64 *)(r10 - 144) = r1
	goto LBB0_12
LBB0_11:
	r1 = *(u32 *)(r10 - 52)
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 152) = r3
	*(u64 *)(r10 - 160) = r2
	if r1 > 101 goto LBB0_43
# %bb.42:
	r1 = *(u64 *)(r10 - 160)
	*(u64 *)(r10 - 152) = r1
LBB0_43:
	r1 = *(u64 *)(r10 - 152)
	*(u64 *)(r10 - 144) = r1
	goto LBB0_12
LBB0_12:
	r1 = *(u64 *)(r10 - 144)
	r2 = *(u16 *)(r10 - 72)
	r2 += r1
	*(u16 *)(r10 - 72) = r2
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 56)
	r2 = *(u32 *)(r10 - 52)
	if r2 > r1 goto LBB0_14
	goto LBB0_13
LBB0_13:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 56)
	r2 = *(u32 *)(r10 - 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 168) = r3
	*(u64 *)(r10 - 176) = r2
	if r1 > 101 goto LBB0_45
# %bb.44:
	r1 = *(u64 *)(r10 - 176)
	*(u64 *)(r10 - 168) = r1
LBB0_45:
	r1 = *(u64 *)(r10 - 168)
	*(u64 *)(r10 - 184) = r1
	goto LBB0_15
LBB0_14:
	r1 = *(u32 *)(r10 - 52)
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 56)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 192) = r3
	*(u64 *)(r10 - 200) = r2
	if r1 > 101 goto LBB0_47
# %bb.46:
	r1 = *(u64 *)(r10 - 200)
	*(u64 *)(r10 - 192) = r1
LBB0_47:
	r1 = *(u64 *)(r10 - 192)
	*(u64 *)(r10 - 184) = r1
	goto LBB0_15
LBB0_15:
	r1 = *(u64 *)(r10 - 184)
	r2 = *(u16 *)(r10 - 72)
	r2 += r1
	*(u16 *)(r10 - 72) = r2
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 60)
	r2 = *(u32 *)(r10 - 52)
	if r2 > r1 goto LBB0_17
	goto LBB0_16
LBB0_16:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 60)
	r2 = *(u32 *)(r10 - 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 208) = r3
	*(u64 *)(r10 - 216) = r2
	if r1 > 101 goto LBB0_49
# %bb.48:
	r1 = *(u64 *)(r10 - 216)
	*(u64 *)(r10 - 208) = r1
LBB0_49:
	r1 = *(u64 *)(r10 - 208)
	*(u64 *)(r10 - 224) = r1
	goto LBB0_18
LBB0_17:
	r1 = *(u32 *)(r10 - 52)
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 60)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 232) = r3
	*(u64 *)(r10 - 240) = r2
	if r1 > 101 goto LBB0_51
# %bb.50:
	r1 = *(u64 *)(r10 - 240)
	*(u64 *)(r10 - 232) = r1
LBB0_51:
	r1 = *(u64 *)(r10 - 232)
	*(u64 *)(r10 - 224) = r1
	goto LBB0_18
LBB0_18:
	r1 = *(u64 *)(r10 - 224)
	r2 = *(u16 *)(r10 - 72)
	r2 += r1
	*(u16 *)(r10 - 72) = r2
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 64)
	r2 = *(u32 *)(r10 - 52)
	if r2 > r1 goto LBB0_20
	goto LBB0_19
LBB0_19:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 64)
	r2 = *(u32 *)(r10 - 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 248) = r3
	*(u64 *)(r10 - 256) = r2
	if r1 > 101 goto LBB0_53
# %bb.52:
	r1 = *(u64 *)(r10 - 256)
	*(u64 *)(r10 - 248) = r1
LBB0_53:
	r1 = *(u64 *)(r10 - 248)
	*(u64 *)(r10 - 264) = r1
	goto LBB0_21
LBB0_20:
	r1 = *(u32 *)(r10 - 52)
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 64)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 272) = r3
	*(u64 *)(r10 - 280) = r2
	if r1 > 101 goto LBB0_55
# %bb.54:
	r1 = *(u64 *)(r10 - 280)
	*(u64 *)(r10 - 272) = r1
LBB0_55:
	r1 = *(u64 *)(r10 - 272)
	*(u64 *)(r10 - 264) = r1
	goto LBB0_21
LBB0_21:
	r1 = *(u64 *)(r10 - 264)
	r2 = *(u16 *)(r10 - 72)
	r2 += r1
	*(u16 *)(r10 - 72) = r2
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 68)
	r2 = *(u32 *)(r10 - 52)
	if r2 > r1 goto LBB0_23
	goto LBB0_22
LBB0_22:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 68)
	r2 = *(u32 *)(r10 - 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 288) = r3
	*(u64 *)(r10 - 296) = r2
	if r1 > 101 goto LBB0_57
# %bb.56:
	r1 = *(u64 *)(r10 - 296)
	*(u64 *)(r10 - 288) = r1
LBB0_57:
	r1 = *(u64 *)(r10 - 288)
	*(u64 *)(r10 - 304) = r1
	goto LBB0_24
LBB0_23:
	r1 = *(u32 *)(r10 - 52)
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 68)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 312) = r3
	*(u64 *)(r10 - 320) = r2
	if r1 > 101 goto LBB0_59
# %bb.58:
	r1 = *(u64 *)(r10 - 320)
	*(u64 *)(r10 - 312) = r1
LBB0_59:
	r1 = *(u64 *)(r10 - 312)
	*(u64 *)(r10 - 304) = r1
	goto LBB0_24
LBB0_24:
	r1 = *(u64 *)(r10 - 304)
	r2 = *(u16 *)(r10 - 72)
	r2 += r1
	*(u16 *)(r10 - 72) = r2
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 72)
	r2 = *(u32 *)(r10 - 52)
	if r2 > r1 goto LBB0_26
	goto LBB0_25
LBB0_25:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 72)
	r2 = *(u32 *)(r10 - 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 328) = r3
	*(u64 *)(r10 - 336) = r2
	if r1 > 101 goto LBB0_61
# %bb.60:
	r1 = *(u64 *)(r10 - 336)
	*(u64 *)(r10 - 328) = r1
LBB0_61:
	r1 = *(u64 *)(r10 - 328)
	*(u64 *)(r10 - 344) = r1
	goto LBB0_27
LBB0_26:
	r1 = *(u32 *)(r10 - 52)
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 72)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 352) = r3
	*(u64 *)(r10 - 360) = r2
	if r1 > 101 goto LBB0_63
# %bb.62:
	r1 = *(u64 *)(r10 - 360)
	*(u64 *)(r10 - 352) = r1
LBB0_63:
	r1 = *(u64 *)(r10 - 352)
	*(u64 *)(r10 - 344) = r1
	goto LBB0_27
LBB0_27:
	r1 = *(u64 *)(r10 - 344)
	r2 = *(u16 *)(r10 - 72)
	r2 += r1
	*(u16 *)(r10 - 72) = r2
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 76)
	r2 = *(u32 *)(r10 - 52)
	if r2 > r1 goto LBB0_29
	goto LBB0_28
LBB0_28:
	r1 = *(u64 *)(r10 - 48)
	r1 = *(u32 *)(r1 + 76)
	r2 = *(u32 *)(r10 - 52)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 368) = r3
	*(u64 *)(r10 - 376) = r2
	if r1 > 101 goto LBB0_65
# %bb.64:
	r1 = *(u64 *)(r10 - 376)
	*(u64 *)(r10 - 368) = r1
LBB0_65:
	r1 = *(u64 *)(r10 - 368)
	*(u64 *)(r10 - 384) = r1
	goto LBB0_30
LBB0_29:
	r1 = *(u32 *)(r10 - 52)
	r2 = *(u64 *)(r10 - 48)
	r2 = *(u32 *)(r2 + 76)
	r1 -= r2
	r1 <<= 32
	r1 >>= 32
	r2 = 0
	r3 = 1
	*(u64 *)(r10 - 392) = r3
	*(u64 *)(r10 - 400) = r2
	if r1 > 101 goto LBB0_67
# %bb.66:
	r1 = *(u64 *)(r10 - 400)
	*(u64 *)(r10 - 392) = r1
LBB0_67:
	r1 = *(u64 *)(r10 - 392)
	*(u64 *)(r10 - 384) = r1
	goto LBB0_30
LBB0_30:
	r1 = *(u64 *)(r10 - 384)
	r2 = *(u16 *)(r10 - 72)
	r2 += r1
	*(u16 *)(r10 - 72) = r2
	r1 = *(u16 *)(r10 - 72)
	r1 *= 10404
	r2 = *(u64 *)(r10 - 64)
	r2 <<= 3
	if r2 >= r1 goto LBB0_32
	goto LBB0_31
LBB0_31:
	r1 = *(u64 *)(r10 - 48)
	r2 = 1
	*(u64 *)(r1 + 8) = r2
	goto LBB0_33
LBB0_32:
	r1 = *(u64 *)(r10 - 48)
	r2 = 2
	*(u64 *)(r1 + 8) = r2
	goto LBB0_33
LBB0_33:
	goto LBB0_34
LBB0_34:
	r1 = 2
	*(u32 *)(r10 - 4) = r1
	goto LBB0_35
LBB0_35:
	r0 = *(u32 *)(r10 - 4)
	exit
                                        # -- End function

	.addrsig
	.addrsig_sym process_packet
